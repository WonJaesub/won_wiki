name: Auto-Create-Parser-Issues

on:
  issues:
    types: [opened, edited]

jobs:
  createIssues:
    runs-on: ubuntu-latest
    # if: ${{ startsWith(github.event.issue.title, 'パーサー追加') && contains(github.event.issue.labels.*.name, 'Epic') && contains(github.event.issue.labels.*.name, 'PARSER') }}
    steps:
      # - name: print event
      #   run: |
      #     echo ${{ toJson(github.event.issue) }}

      - name: event object test
        run: |
          echo "title: ${{ github.event.issue.title }}"
          echo "startsWith: ${{ startsWith(github.event.issue.title, 'パーサー追加') }}"
          echo "contains Epic: ${{ contains(github.event.issue.labels.*.name, 'Epic') }}"
          echo "contains PARSER: ${{ contains(github.event.issue.labels.*.name, 'PARSER') }}"
          echo "full conditions: ${{ startsWith(github.event.issue.title, 'パーサー追加') && contains(github.event.issue.labels.*.name, 'Eipc') && contains(github.event.issue.labels.*.name, 'PARSER') }}"

      # - name: Checkout branch
      #   uses: actions/checkout@v2
      #   with:
      #     ref: develop
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     fetch-depth: 0

      # - run: |
      #     echo "SERVICE_NAME=$(echo ${{ github.event.issue.title }} | sed 's/パーサー追加(\(.*\))/\1/') >> $GITHUB_ENV
      
      # - name: Create issue
      #   id: create-issue
      #   uses: JasonEtco/create-an-issue@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SERVICE_NAME: ${{ env.SERVICE_NAME }}
      #   with:
      #     file_name: .github/create_parser_issue_template/test_template.md
      
      # - run: 'echo Created issue number ${{ steps.create-issue.outputs.number }}'
      # - run: 'echo Created ${{ steps.create-issue.outputs.url }}'